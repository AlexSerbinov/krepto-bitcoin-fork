#!/bin/bash

set -e

echo "üöÄ Building Krepto DMG..."

# –û—á–∏—Å—Ç–∏—Ç–∏ –ø–æ–ø–µ—Ä–µ–¥–Ω—ñ –∑–±—ñ—Ä–∫–∏
rm -rf Krepto.app dmg_temp Krepto.dmg Krepto.dmg.sha256 Krepto.dmg.md5

# –ü–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏ —á–∏ —î –≤–∏–∫–æ–Ω—É–≤–∞–Ω—ñ —Ñ–∞–π–ª–∏
if [ ! -f "src/qt/bitcoin-qt" ] || [ ! -f "src/bitcoind" ] || [ ! -f "src/bitcoin-cli" ]; then
    echo "‚ùå Executable files not found. Building Krepto first..."
    make clean
    ./configure --enable-gui --disable-tests --disable-bench
    make -j8
fi

# –°—Ç–≤–æ—Ä–∏—Ç–∏ app bundle
echo "üì± Creating app bundle..."
mkdir -p Krepto.app/Contents/{MacOS,Resources,Frameworks}

# –ö–æ–ø—ñ—é–≤–∞—Ç–∏ –æ—Å–Ω–æ–≤–Ω—ñ —Ñ–∞–π–ª–∏
cp src/qt/bitcoin-qt Krepto.app/Contents/MacOS/bitcoin-qt
cp src/bitcoind Krepto.app/Contents/MacOS/kryptod
cp src/bitcoin-cli Krepto.app/Contents/MacOS/krypto-cli

# –°—Ç–≤–æ—Ä–∏—Ç–∏ wrapper —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ datadir
cat > Krepto.app/Contents/MacOS/Krepto << 'EOF'
#!/bin/bash

# Get the directory where this script is located
SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"

# Set Krepto data directory
KREPTO_DATADIR="$HOME/.krepto"

# Create datadir if it doesn't exist
mkdir -p "$KREPTO_DATADIR"

# Copy default config if it doesn't exist
if [ ! -f "$KREPTO_DATADIR/bitcoin.conf" ]; then
    cp "$SCRIPT_DIR/../Resources/bitcoin.conf" "$KREPTO_DATADIR/" 2>/dev/null || true
fi

# Launch Krepto with correct datadir
exec "$SCRIPT_DIR/bitcoin-qt" -datadir="$KREPTO_DATADIR" "$@"
EOF

chmod +x Krepto.app/Contents/MacOS/*

# –í–∫–ª—é—á–∏—Ç–∏ Qt5 frameworks –¥–ª—è standalone —Ä–æ–±–æ—Ç–∏
echo "üîó Including Qt5 frameworks..."
QT_PATH="/opt/homebrew/opt/qt@5"

if [ -d "$QT_PATH" ]; then
    echo "‚úÖ Found Qt5 at $QT_PATH"
    
    # –ö–æ–ø—ñ—é–≤–∞—Ç–∏ –Ω–µ–æ–±—Ö—ñ–¥–Ω—ñ Qt frameworks
    cp -R "$QT_PATH/lib/QtCore.framework" Krepto.app/Contents/Frameworks/
    cp -R "$QT_PATH/lib/QtGui.framework" Krepto.app/Contents/Frameworks/
    cp -R "$QT_PATH/lib/QtWidgets.framework" Krepto.app/Contents/Frameworks/
    cp -R "$QT_PATH/lib/QtNetwork.framework" Krepto.app/Contents/Frameworks/
    cp -R "$QT_PATH/lib/QtDBus.framework" Krepto.app/Contents/Frameworks/
    
    # –°—Ç–≤–æ—Ä–∏—Ç–∏ qt.conf –¥–ª—è –ø—Ä–∞–≤–∏–ª—å–Ω–∏—Ö —à–ª—è—Ö—ñ–≤
    cat > Krepto.app/Contents/Resources/qt.conf << 'EOF'
[Paths]
Frameworks = ../Frameworks
EOF
    
    echo "‚úÖ Qt5 frameworks included"
else
    echo "‚ö†Ô∏è  Warning: Qt5 not found at $QT_PATH"
    echo "   DMG will require Qt5 to be installed separately"
fi

# –°—Ç–≤–æ—Ä–∏—Ç–∏ —ñ–∫–æ–Ω–∫—É –∑ –∫—Ä–∞—â–æ—é —è–∫—ñ—Å—Ç—é
echo "üé® Creating high-quality icon..."
if [ -f "share/pixmaps/Bitcoin256.png" ]; then
    mkdir -p krepto.iconset
    
    # –í–∏–∫–æ—Ä–∏—Å—Ç–∞—Ç–∏ Bitcoin256.png —è–∫ –±–∞–∑—É —Ç–∞ —Å—Ç–≤–æ—Ä–∏—Ç–∏ –∫–≤–∞–¥—Ä–∞—Ç–Ω—ñ —ñ–∫–æ–Ω–∫–∏
    # –°–ø–æ—á–∞—Ç–∫—É —Å—Ç–≤–æ—Ä–∏—Ç–∏ –∫–≤–∞–¥—Ä–∞—Ç–Ω—É –≤–µ—Ä—Å—ñ—é 1024x1024
    sips -z 1024 1024 share/pixmaps/Bitcoin256.png --out temp_1024.png
    
    # –°—Ç–≤–æ—Ä–∏—Ç–∏ –≤—Å—ñ –Ω–µ–æ–±—Ö—ñ–¥–Ω—ñ —Ä–æ–∑–º—ñ—Ä–∏ –∑ –∫–≤–∞–¥—Ä–∞—Ç–Ω–æ—ó –≤–µ—Ä—Å—ñ—ó
    sips -z 16 16 temp_1024.png --out krepto.iconset/icon_16x16.png
    sips -z 32 32 temp_1024.png --out krepto.iconset/icon_16x16@2x.png
    sips -z 32 32 temp_1024.png --out krepto.iconset/icon_32x32.png
    sips -z 64 64 temp_1024.png --out krepto.iconset/icon_32x32@2x.png
    sips -z 128 128 temp_1024.png --out krepto.iconset/icon_128x128.png
    sips -z 256 256 temp_1024.png --out krepto.iconset/icon_128x128@2x.png
    sips -z 256 256 temp_1024.png --out krepto.iconset/icon_256x256.png
    sips -z 512 512 temp_1024.png --out krepto.iconset/icon_256x256@2x.png
    sips -z 512 512 temp_1024.png --out krepto.iconset/icon_512x512.png
    sips -z 1024 1024 temp_1024.png --out krepto.iconset/icon_512x512@2x.png
    
    # –°—Ç–≤–æ—Ä–∏—Ç–∏ ICNS
    iconutil -c icns krepto.iconset
    cp krepto.icns Krepto.app/Contents/Resources/
    
    # –û—á–∏—Å—Ç–∏—Ç–∏ —Ç–∏–º—á–∞—Å–æ–≤—ñ —Ñ–∞–π–ª–∏
    rm -rf krepto.iconset krepto.icns temp_1024.png
    
    echo "‚úÖ High-quality icon created"
else
    echo "‚ö†Ô∏è  Warning: Bitcoin256.png not found, using default icon"
fi

# –í–∏–ø—Ä–∞–≤–∏—Ç–∏ —à–ª—è—Ö–∏ –∑–∞–ª–µ–∂–Ω–æ—Å—Ç–µ–π –¥–ª—è Qt frameworks
echo "üîß Fixing Qt dependencies..."
if [ -d "Krepto.app/Contents/Frameworks" ]; then
    # –°—Ç–≤–æ—Ä–∏—Ç–∏ —Å–∫—Ä–∏–ø—Ç –¥–ª—è –≤–∏–ø—Ä–∞–≤–ª–µ–Ω–Ω—è –∑–∞–ª–µ–∂–Ω–æ—Å—Ç–µ–π
    cat > fix_qt_deps.sh << 'EOF'
#!/bin/bash

APP_PATH="Krepto.app"
EXECUTABLE="$APP_PATH/Contents/MacOS/bitcoin-qt"
FRAMEWORKS_PATH="$APP_PATH/Contents/Frameworks"

# –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –≤–∏–ø—Ä–∞–≤–ª–µ–Ω–Ω—è —à–ª—è—Ö—ñ–≤
fix_paths() {
    local binary="$1"
    echo "Fixing: $binary"
    
    # –û—Ç—Ä–∏–º–∞—Ç–∏ —Å–ø–∏—Å–æ–∫ –∑–∞–ª–µ–∂–Ω–æ—Å—Ç–µ–π
    otool -L "$binary" | grep -E "Qt.*\.framework" | while read -r line; do
        old_path=$(echo "$line" | awk '{print $1}')
        framework_name=$(basename "$old_path" | sed 's/\.framework.*//')
        
        if [[ "$old_path" == *"Qt"* ]]; then
            new_path="@executable_path/../Frameworks/${framework_name}.framework/Versions/5/${framework_name}"
            echo "  Changing: $old_path -> $new_path"
            install_name_tool -change "$old_path" "$new_path" "$binary" 2>/dev/null || true
        fi
    done
}

# –í–∏–ø—Ä–∞–≤–∏—Ç–∏ –≥–æ–ª–æ–≤–Ω–∏–π –≤–∏–∫–æ–Ω—É–≤–∞–Ω–∏–π —Ñ–∞–π–ª
fix_paths "$EXECUTABLE"

# –í–∏–ø—Ä–∞–≤–∏—Ç–∏ frameworks
for framework in "$FRAMEWORKS_PATH"/*.framework; do
    if [ -d "$framework" ]; then
        framework_name=$(basename "$framework" .framework)
        framework_binary="$framework/Versions/5/$framework_name"
        if [ -f "$framework_binary" ]; then
            fix_paths "$framework_binary"
        fi
    fi
done

echo "‚úÖ Qt dependencies fixed"
EOF
    
    chmod +x fix_qt_deps.sh
    ./fix_qt_deps.sh
    rm fix_qt_deps.sh
fi

# –°—Ç–≤–æ—Ä–∏—Ç–∏ Info.plist –∑ –ø—Ä–∞–≤–∏–ª—å–Ω–∏–º –ø–æ—Å–∏–ª–∞–Ω–Ω—è–º –Ω–∞ —ñ–∫–æ–Ω–∫—É
cat > Krepto.app/Contents/Info.plist << 'EOF'
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
    <key>CFBundleExecutable</key>
    <string>Krepto</string>
    <key>CFBundleIdentifier</key>
    <string>org.krepto.Krepto</string>
    <key>CFBundleName</key>
    <string>Krepto</string>
    <key>CFBundleDisplayName</key>
    <string>Krepto</string>
    <key>CFBundleVersion</key>
    <string>1.0.0</string>
    <key>CFBundleShortVersionString</key>
    <string>1.0</string>
    <key>CFBundlePackageType</key>
    <string>APPL</string>
    <key>CFBundleSignature</key>
    <string>KREP</string>
    <key>CFBundleIconFile</key>
    <string>krepto</string>
    <key>LSMinimumSystemVersion</key>
    <string>10.14</string>
    <key>NSHighResolutionCapable</key>
    <true/>
    <key>NSRequiresAquaSystemAppearance</key>
    <false/>
    <key>LSApplicationCategoryType</key>
    <string>public.app-category.finance</string>
</dict>
</plist>
EOF

# –°—Ç–≤–æ—Ä–∏—Ç–∏ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—É –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—é –≤ Resources (—è–∫ backup)
cat > Krepto.app/Contents/Resources/bitcoin.conf << 'EOF'
# Krepto Default Configuration
port=12345
rpcport=12347
server=1
rpcuser=kreptouser
rpcpassword=kreptopass123
gui=1
gen=0
listen=1
discover=1
deprecatedrpc=generate
dbcache=512
maxmempool=300
debug=0
printtoconsole=0
EOF

# –¢–µ—Å—Ç—É–≤–∞—Ç–∏ app bundle
echo "üß™ Testing app bundle..."
./Krepto.app/Contents/MacOS/Krepto --version

# –°—Ç–≤–æ—Ä–∏—Ç–∏ DMG
echo "üíø Creating DMG..."
mkdir -p dmg_temp
cp -R Krepto.app dmg_temp/
ln -s /Applications dmg_temp/Applications

# –°—Ç–≤–æ—Ä–∏—Ç–∏ README –ë–ï–ó Qt5 –≤–∏–º–æ–≥
cat > dmg_temp/README.txt << 'EOF'
Krepto - Cryptocurrency Mining Made Simple

INSTALLATION:
1. Drag Krepto.app to Applications folder
2. Launch Krepto from Applications
3. Click "Start Mining" to begin

FEATURES:
- Easy-to-use GUI interface
- Built-in mining functionality
- Automatic network connection
- Secure wallet management
- Uses ~/.krepto data directory automatically
- Automatic configuration setup
- Self-contained - no additional software required!

REQUIREMENTS:
- macOS 10.14 or later
- No additional software installation needed!

IMPORTANT:
Krepto automatically uses ~/.krepto directory for blockchain data.
This is separate from Bitcoin and will NOT download 620GB of Bitcoin blockchain.
All configuration is handled automatically - just install and run!

All required libraries are included - no need to install Qt5 or Homebrew!

For support: https://krepto.org
EOF

# –°—Ç–≤–æ—Ä–∏—Ç–∏ DMG
hdiutil create -volname "Krepto" -srcfolder dmg_temp -ov -format UDZO Krepto.dmg

# –°—Ç–≤–æ—Ä–∏—Ç–∏ checksums
shasum -a 256 Krepto.dmg > Krepto.dmg.sha256
md5 Krepto.dmg > Krepto.dmg.md5

# –û—á–∏—Å—Ç–∏—Ç–∏ —Ç–∏–º—á–∞—Å–æ–≤—ñ —Ñ–∞–π–ª–∏
rm -rf dmg_temp

echo "‚úÖ DMG created successfully!"
echo "üìã File info:"
ls -lh Krepto.dmg
echo "üîê Checksums:"
cat Krepto.dmg.sha256
cat Krepto.dmg.md5

# –ü–æ–∫–∞–∑–∞—Ç–∏ —Ä–æ–∑–º—ñ—Ä —Ç–∞ —â–æ –≤–∫–ª—é—á–µ–Ω–æ
echo ""
echo "üì¶ DMG Contents:"
echo "- Krepto.app with all Qt5 frameworks included"
echo "- No external dependencies required"
echo "- Ready for distribution to end users" 